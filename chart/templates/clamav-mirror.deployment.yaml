apiVersion: apps/v1
kind: Deployment
metadata:
  name: clamav-mirror
  labels:
    app: clamav-mirror
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: clamav-mirror
  template:
    metadata:
      labels:
        app: clamav-mirror
    spec:
      containers:
        - name: cvdupdate-freshclam-mirror
          image: {{ .Values.gcp.region }}-docker.pkg.dev/{{ .Values.gcp.gar.project }}/{{ .Values.gcp.gar.repo }}/{{ .Values.mirror.image.name }}:{{ .Values.mirror.image.tag }}
          imagePullPolicy: {{ .Values.mirror.image.pullPolicy }}
          command: ["/bin/sh", "-c"]
          args:
            - |
              chmod o+u=rwx /opt/cvd
              ./run.sh
          volumeMounts:
            - name: cvd-data
              mountPath: /opt/cvd
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.mirror.net.applicationPort }}
              scheme: HTTP
            initialDelaySeconds: {{ .Values.mirror.readinessProbe.initialDelaySeconds | default 30 }}
            periodSeconds: {{ .Values.mirror.readinessProbe.periodSeconds | default 15 }}
          resources:
            requests:
              memory: {{ .Values.mirror.resources.update.mem.min }}
            limits:
              memory: {{ .Values.mirror.resources.update.mem.max }}
      volumes:
        - name: cvd-data
          persistentVolumeClaim:
            claimName: clamav-cvd-data
---
apiVersion: v1
kind: Service
metadata:
  name: clamav-mirror-service
spec:
  selector:
    app: clamav-mirror
  ports:
    - protocol: TCP
      port: {{ .Values.mirror.net.servicePort }}
      targetPort: {{ .Values.mirror.net.applicationPort }}
  sessionAffinity: None
  type: NodePort
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: clamav-cvd-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
