apiVersion: apps/v1
kind: Deployment
metadata:
  name: clamav-mirror
  labels:
    app: clamav-mirror
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: clamav-mirror
  template:
    metadata:
      labels:
        app: clamav-mirror
    spec:
      containers:
        - name: cvdupdate-server
          image: {{ .Values.gcp.region }}-docker.pkg.dev/{{ .Values.gcp.gar.project }}/{{ .Values.gcp.gar.repo }}/{{ .Values.mirror.image.name }}:{{ .Values.mirror.image.tag }}
          imagePullPolicy: {{ .Values.mirror.image.pullPolicy }}
          command: ["/bin/sh", "-c"]
          args:
            - |
              cvdupdate config set -d /opt/db
              cvdupdate serve
          volumeMounts:
            - name: data
              mountPath: /opt/db
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.mirror.net.applicationPort }}
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 30
        - name: cvdupdate-cron
          image: {{ .Values.gcp.region }}-docker.pkg.dev/{{ .Values.gcp.gar.project }}/{{ .Values.gcp.gar.repo }}/{{ .Values.mirror.image.name }}:{{ .Values.mirror.image.tag }}
          imagePullPolicy: {{ .Values.mirror.image.pullPolicy }}
          command: ["/bin/sh", "-c"]
          args:
            - |
              echo "#!/bin/sh" >> /etc/periodic/hourly/cvdupdate
              echo "cvdupdate update" >> /etc/periodic/hourly/cvdupdate
              chmod +x /etc/periodic/hourly/cvdupdate
              cvdupdate config set -d /opt/db
              cvdupdate update
              crond -f -l 8
          volumeMounts:
            - name: data
              mountPath: /opt/db
      volumes:
        - name: data
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: cvdupdate-service
spec:
  selector:
    app: clamav-mirror
  ports:
    - protocol: TCP
      port: {{ .Values.mirror.net.servicePort }}
      targetPort: {{ .Values.mirror.net.applicationPort }}
  sessionAffinity: None
  type: NodePort
